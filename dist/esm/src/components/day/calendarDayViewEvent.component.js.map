{"version":3,"file":"calendarDayViewEvent.component.js","sourceRoot":"","sources":["../../../../../src/components/day/calendarDayViewEvent.component.ts"],"names":[],"mappings":"OAAO,EAAC,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,uBAAuB,EAAC,MAAM,eAAe;AAI7F;IAAA;QAIG,iBAAY,GAAsB,IAAI,YAAY,EAAE,CAAC;IAmCxD,CAAC;IAjCM,+BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,6BAA6B;oBACvC,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,QAAQ,EAAE,qyBAmBT;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,mCAAc,GAA6D,EACjF,CAAC;IACK,mCAAc,GAA2C;QAChE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC9B,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;KAClC,CAAC;IACF,2BAAC;AAAD,CAAC,AAvCD,IAuCC","sourcesContent":["import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy} from '@angular/core';\nimport {DayViewEvent} from 'calendar-utils';\n\n\nexport class CalendarDayViewEvent {\n\n   dayEvent: DayViewEvent;\n\n   eventClicked: EventEmitter<any> = new EventEmitter();\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'mwl-calendar-day-view-event',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div\n      class=\"cal-event\"\n      [style.marginTop.px]=\"dayEvent.top\"\n      [style.marginLeft.px]=\"dayEvent.left + 70\"\n      [style.height.px]=\"dayEvent.height\"\n      [style.width.px]=\"dayEvent.width - 1\"\n      [style.backgroundColor]=\"dayEvent.event.color.secondary\"\n      [style.borderColor]=\"dayEvent.event.color.primary\"\n      [class.cal-starts-within-day]=\"!dayEvent.startsBeforeDay\"\n      [class.cal-ends-within-day]=\"!dayEvent.endsAfterDay\"\n      [ngClass]=\"dayEvent.event.cssClass\">\n      <mwl-calendar-event-title\n        [event]=\"dayEvent.event\"\n        view=\"day\"\n        (click)=\"eventClicked.emit()\">\n      </mwl-calendar-event-title>\n      <mwl-calendar-event-actions [event]=\"dayEvent.event\"></mwl-calendar-event-actions>\n    </div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dayEvent': [{ type: Input },],\n'eventClicked': [{ type: Output },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}